<?xml version="1.0" encoding="UTF-8"?>
<article desc="SVG to JavaFX conversion Usage">
   <altTitle desc="from svg usage" />
   <altTitle desc="SVGLoader" />
   <meta desc="This article presents the usage of the library which converts svg to a JavaFX tree" />
   The most simple way to use the library is just by calling one of the <code>SVGLoader.load</code> static methods. For example:
   <pre syntax="java">
      SVGImage img = SVGLoader.load(&lt;my SVG file&gt;);
   </pre>

   The <ref id="SVGImage" /> result is a JavaFX Group. 
   
   <title title="parameters"/>
   <moreInfo id="LoaderParameters" />
   By default the result has the same size as the input SVG image. However several parameters allow to 
   configure the result:
   <ul>
      <li>It is possible to specify the width of the result (the resulting JavaFX result will have the same
         form factor as the SVG input</li>
      <li>It is possible to specify the scale of the result</li>
      <li>It is possible to specify a stylesheet to use for the result</li>
   </ul>
   
   This can be achieved through one of the <code>load</code> static methods. You can also specify how you want to load the
   SVG content by using the <ref id="LoaderParameters" /> class.
   
   <title title="Converting to an image"/>
   <moreInfo id="SVGImage#producing a JavaFX image" desc="Producing a JavaFX image" />
   The <code>SVGImage</code> result can be converted to a JavaFX Image. The simplest way to perform the
   conversion is by using the <code>toImage</code> method. For example:
   <pre syntax="java">
      SVGImage img = SVGLoader.load(&lt;my SVG file&gt;);
      Image fxImg = img.toImage();
   </pre>
   
   Several conversion methods allow to specify the width of the resulting image (keeping the form factor), or
   scaling the image. For example: 
   <pre syntax="java">
      SVGImage img = SVGLoader.load(&lt;my SVG file&gt;);
      Image fxImg = img.toImage(100); // the resulting image will have a width of 100 pixels
      Image fxImg2 = img.toImageScaled(0.5d); // the resulting image will be scaled by a 0.5 factor    
      Image fxImg2 = img.toImage(ScaleQuality.RENDER_QUALITY, 50); // the resulting image will have a width of 50 pixels
   </pre>  
   
   It is also possible to use the JavaFX <code>SnapshotParameters</code> to customize the resulting image.
   
   <title title="Accessing the named nodes"/>
   The SVG nodes which have an <code>id</code> attribute can be accessed through the <source syntax="java">getNode(id)</source>
   method in the <ref id="SVGImage" /> result.
   
   <title title="threading usage"/>
   You can use the library in the JavaFX Platform Thread or in any other Thread. The library will make sure that
   the conversion will be performed in the JavaFX Platform Thread, and will return the result in the calling Thread.      
            
   <see id="SVGLoader" />
   <see id="SVGImage" />
   <cat id="fromsvg" />
</article>
