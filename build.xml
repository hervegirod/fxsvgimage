<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="fxsvgImage" default="default" basedir=".">
   <description>Builds, tests, and runs the project fxsvgImage.</description>
   <import file="nbproject/build-impl.xml"/>
   <!-- =================================================================== -->
   <!-- post NB init                                                          -->
   <!-- =================================================================== -->

   <target name="-post-init">
      <!-- JDK definition -->
      <property name="jdk" value="C:\Program Files\Java\jdk-1.8"/>   
      <!-- To set with your location of Java 8 JDK -->
      <property name="javadocDir" value="${jdk}/docs/api"/>
      <property name="javadocEXE" value="${jdk}/bin/javadoc.exe"/>
      <!-- general properties definition -->
      <property name="archiveName" value="fxsvgImage"/>
      <property name="src.dir" value="${src.core.dir}/.." />
      <property name="wikiDir" value="web/wiki/"/>  
      <condition property="javadoc.exists">
         <available file="${dist.javadoc.dir}" type="dir"/>
      </condition>
      <property name="javadocIn" value="${dist.javadoc.dir}" />
      <property name="javadocOut" value="web/iki/javadoc" />
      <property name="javadocSourceforgeOut" value="web/sourceforge/javadoc" />      
      <condition property="wiki.exists">
         <available file="${wikiDir}/index.html" type="file"/>
      </condition>      
      <condition property="distrib.notexists">
         <not>
            <available file="distrib" type="dir"/>
         </not>
      </condition> 
      <condition property="distrib.notexists">
         <not>
            <available file="distrib" type="dir"/>
         </not>
      </condition>
      <property name="docGeneratorDirURL" value="https://downloads.sourceforge.net/project/docjgenerator/" />      
      <property name="docGeneratorURL" value="${docGeneratorDirURL}/Version%201.6.10/docGenerator-bin-1.6.10.zip" />
      <property name="docGeneratorDir" value="web/soft/"/>       
      <condition property="docgenerator.notexists">
         <not>
            <available file="web/soft/docGenerator.jar" type="file"/>
         </not>
      </condition>    
      <condition property="docgenerator.exists">
         <available file="web/soft/docGenerator.jar" type="file"/>
      </condition>   
      <property name="groovyDirURL" value="https://groovy.jfrog.io/artifactory/dist-release-local/groovy-zips/" />      
      <property name="groovyURL" value="${groovyDirURL}/apache-groovy-binary-4.0.26.zip" />      
      <property name="testlib" value="testlib"/>       
      <condition property="groovy.notexists">
         <not>
            <available file="testlib/groovy-4.0.26.jar" type="file"/>
         </not>
      </condition>    
      <condition property="groovy.exists">
         <available file="testlib/groovy-4.0.26.jar" type="file"/>
      </condition>                    
      <property name="j2seapi" value="http://docs.oracle.com/javase/7/docs/api/"/>        
      <!-- To set with your location of Java 8 JDK -->
      <property name="javadocDir" value="${jdk.home}/docs/api"/>
      <property name="javadocEXE" value="${jdk.home}/bin/javadoc.exe"/>        
   </target>

   <!-- =================================================================== -->
   <!-- Non NB targets                                                          -->
   <!-- =================================================================== -->

   <target description="fetch version" depends="-init-project" name="version">
      <loadproperties srcFile="${src.core.dir}/org/girod/javafx/svgimage/fxsvgimage.properties">
         <filterchain>
            <linecontains>
               <contains value="version"/>
            </linecontains>
         </filterchain>
      </loadproperties>
   </target>

   <!-- =================================================================== -->
   <!-- zip files                                                          -->
   <!-- =================================================================== -->

   <!-- zip javadocs -->
   <target depends="version, -post-init"
           description="create javadoc zip files" name="zipjavadoc" if="javadoc.exists">
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-docs-${version}.zip">
         <fileset description="documentation" dir="${dist.javadoc.dir}">
            <include name="**/*"/>
         </fileset>
      </zip>
   </target>
   
   <!-- zip wiki -->
   <target depends="version, -post-init"
           description="create wiki zip files" name="zipwiki" if="wiki.exists">
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-wiki-${version}.zip">
         <fileset description="documentation" dir="${wikiDir}">
            <include name="**/*.*"/>
            <exclude name="INTENTIONALLY_EMPTY"/>
         </fileset>
      </zip>
   </target>   

   <target depends="version, -post-init, zipjavadoc, zipwiki" description="create zip files" name="zip">
      <!-- zip binary files -->
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-bin-${version}.zip">
         <fileset description="docs" dir=".">
            <include name="LICENSE"/>
            <include name="README.md"/>
            <include name="HISTORY.md"/>    
         </fileset>    
         <fileset description="samples" dir=".">
            <include name="samples/**/*.*"/>
         </fileset>         
         <fileset description="binaries" dir="${dist.dir}">
            <include name="fxsvgImage.jar"/>
            <include name="fxsvgBrowser.jar"/>
         </fileset>
      </zip>
      <!-- zip source files  -->
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-src-${version}.zip">
         <fileset description="core source directory" dir="${src.dir}/..">
            <include name="src/**/*.java"/>
            <include name="src/**/*.properties"/>
            <include name="src/**/*.html"/>
            <include name="src/**/*.mf"/>
            <include name="src/**/*.png"/>            
            <include name="src/**/*.xml"/>            
            <include name="src/manifest*.mf"/>
         </fileset>
         <fileset description="samples" dir=".">
            <include name="samples/**/*.*"/>
         </fileset>          
         <fileset description="binaries" dir="${dist.dir}">
            <include name="fxsvgImage.jar"/>
            <include name="fxsvgBrowser.jar"/>
         </fileset>
         <fileset description="testlib" dir=".">
            <include name="testlib/**/*.*"/>
         </fileset>         
         <fileset description="project" dir="${dist.dir}/..">
            <include name="nbproject/**/*.*"/>
         </fileset>         
         <fileset description="samples" dir=".">
            <include name="samples/*"/>
         </fileset> 
         <fileset description="web" dir=".">
            <include name="web/source/**/*.*"/>
            <include name="web/soft/INTENTIONALLY_EMPTY"/>
            <include name="web/wiki/INTENTIONALLY_EMPTY"/>
            <include name="web/sourceforge/INTENTIONALLY_EMPTY"/>
         </fileset>                                            
         <fileset description="misc" dir=".">
            <include name="LICENSE"/>
            <include name="README.md"/>
            <include name="HISTORY.md"/>            
            <include name="build.xml"/>
            <include name="pom.xml"/>            
         </fileset>
      </zip>
      <!-- zip test source files  -->
      <zip compress="true" defaultexcludes="true" zipfile="${dist.dir}/${archiveName}-tests-${version}.zip">
         <fileset description="tests directory" dir="${test.src.dir}/..">
            <include name="test/**/*.*"/>
         </fileset>
      </zip>      
   </target>
     
    
   <!-- =================================================================== -->
   <!-- NB overwrite targets : javadocs                                     -->
   <!-- =================================================================== -->

   <target depends="-javadoc-core" name="-javadoc-build" />

   <target depends="init, -init-project, -post-init" name="-javadoc-core">
      <!-- Javadoc -->
      <javadoc author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}"
               docencoding="UTF-8" encoding="${javadoc.encoding.used}" failonerror="true"
               noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}"
               notree="${javadoc.notree}" private="${javadoc.private}"
               source="${javac.source}" splitindex="${javadoc.splitindex}"
               use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}"
               windowtitle="${javadoc.windowtitle}" executable="${javadocEXE}" >         
         <link href="${j2seapi}" />
         <!-- the Xdoclint argument avoid to get javadoc errors when the documentation format is not compliant for HTML 4, which was the case before
         Java 8. It would also not be a good idea, because empty tags like br are very useful -->
         <arg line="-Xdoclint:none"/> 
         <fileset dir="${src.core.dir}/.." defaultexcludes="yes">
            <include name="core/org/girod/javafx/svgimage/**/*.java"/>
            <include name="browser/org/girod/javafx/svgimage//browser/**/*.java"/>
            <include name="tosvg/org/girod/javafx/svgimage//tosvg/**/*.java"/>
         </fileset>                    
         <classpath>
            <path path="${javac.classpath}"/>
         </classpath>         
         <group title="Core API">
            <package name="org.girod.javafx.svgimage" />
            <package name="org.girod.javafx.svgimage.xml*" />
         </group>         
         <group title="Browser API" packages="org.girod.javafx.svgimage.browser" />   
         <group title="toSVG API">
            <package name="org.girod.javafx.svgimage.tosvg" />
            <package name="org.girod.javafx.svgimage.tosvg.converters" />
            <package name="org.girod.javafx.svgimage.tosvg.utils" />
            <package name="org.girod.javafx.svgimage.tosvg.wrappers" />
            <package name="org.girod.javafx.svgimage.tosvg.xml" />
         </group>                            
         <doctitle><![CDATA[<h1>fxsvgImage documentation</h1>]]></doctitle>
         <bottom>
            <![CDATA[<i>Copyright &#169; 2021, 2022, 2025 Herve Girod. All Rights Reserved. Documentation and source under the BSD 3-Clause licence</i>]]>
         </bottom>         
      </javadoc>
   </target>                     

   <!-- =================================================================== -->
   <!-- NB overwrite targets : jar                                     -->
   <!-- =================================================================== -->

   <target depends="init,compile,-pre-jar,-do-jar-without-manifest,-post-jar" description="Build JAR." name="jar"/>
   
   <target name="-do-jar-without-manifest" depends="-jarlib" />
   
   <target name="-jarlib" depends="init,compile,-pre-pre-jar,-pre-jar" >
      <!-- Core Jar construction -->
      <jar description="core jar binary file" compress="true" jarfile="${dist.dir}/fxsvgImage.jar" 
           manifest="${src.dir}/core/manifest.mf" >
         <fileset defaultexcludes="yes" dir="${build.classes.dir}">
            <include name="org/girod/**/*.class"/>
            <include name="org/girod/**/*.xml"/>                   
            <include name="org/girod/**/*.properties"/>  
            <exclude name="org/girod/javafx/svgimage/browser/**/*.*"/>       
            <exclude name="org/girod/javafx/svgimage/tosvg/**/*.*"/>      
         </fileset>
      </jar>
      <!-- browser Jar construction -->
      <jar description="browser jar binary file" compress="true" jarfile="${dist.dir}/fxsvgBrowser.jar" 
           manifest="${src.dir}/browser/manifest.mf" >
         <fileset defaultexcludes="yes" dir="${build.classes.dir}">
            <include name="org/girod/javafx/svgimage/browser/**/*.class"/>     
            <include name="org/girod/javafx/svgimage/browser/**/*.png"/>   
         </fileset>
      </jar>      
      <!-- converter Jar construction -->
      <jar description="converter jar binary file" compress="true" jarfile="${dist.dir}/fxsvgConverter.jar" 
           manifest="${src.dir}/tosvg/manifest.mf" >
         <fileset defaultexcludes="yes" dir="${build.classes.dir}">
            <include name="org/girod/javafx/svgimage/tosvg/**/*.class"/>         
         </fileset>
      </jar>      
   </target>   
   
   <!-- =================================================================== -->
   <!-- NB overwrite targets : download tests library                       -->
   <!-- =================================================================== -->  
   <target name="download groovy"  description="download groovy" 
           depends="init, -post-init" if="groovy.notexists" >
      <get src="${groovyURL}" dest="${testlib}/groovy.zip" verbose="false" usetimestamp="false"/>
      <unzip src="${testlib}/groovy.zip" dest="${testlib}"/>
      <move file="${testlib}/groovy-4.0.26/lib/groovy-4.0.26.jar" tofile="${testlib}/groovy-4.0.26.jar"/>      
      <delete includeEmptyDirs="true">
         <fileset dir="${testlib}/groovy-4.0.26"  >
            <include name="**/*"/>
         </fileset>	    
         <fileset dir="${testlib}/"  >
            <include name="groovy.zip"/>
         </fileset>	                                            	        
      </delete>
      <delete dir="${testlib}/groovy-4.0.26"/>                                              	            	      
   </target>  
   
   <target name="delete groovy"  description="delete groovy" 
           depends="init, -post-init" if="groovy.exists" >
      <delete includeEmptyDirs="true">
         <fileset dir="${testlib}"  >
            <include name="groovy-4.0.26.jar"/>
         </fileset>	     
      </delete>	      
   </target>       
   
   <!-- =================================================================== -->
   <!-- copy javadoc -->
   <!-- =================================================================== -->
   <target name="copyjavadoc" description="copy javadoc" depends="init, -post-init, version, deletejavadoc" >
      <mkdir dir="${javadocOut}" />
      <mkdir dir="${javadocSourceforgeOut}" />
      <copy todir="${javadocOut}">
         <fileset defaultexcludes="yes" dir="${javadocIn}" >
            <include name="**"/>
         </fileset>
      </copy>
      <copy todir="${javadocSourceforgeOut}">
         <fileset defaultexcludes="yes" dir="${javadocIn}" >
            <include name="**"/>
         </fileset>
      </copy>
   </target>

   <target name="deletejavadoc" depends="-deletewikijavadoc, -deleteSourceforgejavadoc" />

   <target name="-deletewikijavadoc" depends="init, -post-init, version" if="${wikijavadoc.exists}">
      <delete includeEmptyDirs="true">
         <fileset dir="${javadocOut}" includes="**/*" />
      </delete>
   </target>

   <target name="-deleteSourceforgejavadoc" depends="init, -post-init, version" if="${sourceforgejavadoc.exists}">
      <delete includeEmptyDirs="true">
         <fileset dir="${javadocSourceforgeOut}" includes="**/*" />
      </delete>
   </target>
     
   <!-- =================================================================== -->
   <!-- NB overwrite targets : wiki                                         -->
   <!-- =================================================================== -->   
   <target name="download docJGenerator"  description="download docJGenerator" 
           depends="init, -post-init" if="docgenerator.notexists" >
      <get src="${docGeneratorURL}" dest="${docGeneratorDir}/docGenerator.zip" verbose="false" usetimestamp="false"/>
      <unzip src="${docGeneratorDir}/docGenerator.zip" dest="${docGeneratorDir}"/>
      <delete includeEmptyDirs="true">  
         <fileset dir="${docGeneratorDir}"  >
            <include name="docGenerator.zip"/>
         </fileset>	         	        
      </delete>	      
   </target>  
   
   <target name="delete docJGenerator"  description="delete docJGenerator" 
           depends="init, -post-init" if="docgenerator.exists" >
      <delete includeEmptyDirs="true">
         <fileset dir="${docGeneratorDir}"  >
            <include name="docGenerator.jar"/>
            <include name="LICENSE.txt"/>
            <include name="README.txt"/>
         </fileset>	     
         <fileset dir="${docGeneratorDir}/lib"  >
            <include name="**"/>
         </fileset>	 	                 
      </delete>	      
   </target>    
   
   <target name="generateWiki" description="generate Wiki" depends="init, version" > 
      <java classname="org.docgene.main.DocGenerator">
         <arg value="-input=web/source"/>
         <arg value="-output=web/wiki"/>         
         <arg value="-lightbox=true"/> 
         <arg value="-$version=${version}"/>
         <arg value="-search=titles"/>
         <arg value="-fullTextSearch=true"/>
         <arg value="-config=web/source/config.properties"/>
         <classpath>
            <pathelement path="web/soft/docGenerator.jar"/>        
         </classpath>
      </java>
   </target>   
   
   <target name="generateWikiForSourceForge" description="generate foe sourceforge" depends="init, version" > 
      <java classname="org.docgene.main.DocGenerator">
         <arg value="-input=web/source"/>
         <arg value="-output=web/sourceforge"/>         
         <arg value="-lightbox=true"/> 
         <arg value="-$version=${version}"/>
         <arg value="-config=web/source/sourceforge.properties"/>         
         <arg value="-search=titles"/>
         <arg value="-fullTextSearch=true"/>
         <arg value="-config=web/source/config.properties"/>
         <classpath>
            <pathelement path="web/soft/docGenerator.jar"/>        
         </classpath>
      </java>
   </target>      
   
   <target name="cleanWiki" description="clean Wiki" depends="init, version" >
      <delete includeEmptyDirs="true" >
         <fileset dir="web/wiki" includes="**/*" excludes="INTENTIONALLY_EMPTY" />
         <fileset dir="web/sourceforge" includes="**/*" excludes="INTENTIONALLY_EMPTY" />
      </delete>
   </target>                                    
</project>
